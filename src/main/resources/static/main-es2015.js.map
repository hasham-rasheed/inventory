{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.module.ts","./src/app/components/app.component.ts","./src/app/components/app.component.html","./src/app/components/inventory/inventory.component.ts","./src/app/components/inventory/inventory.component.html","./src/app/service/inventory.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './components/app.component';\nimport { InventoryComponent } from './components/inventory/inventory.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InventoryComponent,\n    InventoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    NoopAnimationsModule,\n    MatTableModule,\n    HttpClientModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-inventory></app-inventory>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { InventoryService } from '../../service/inventory.service';\nimport { Subscription } from 'rxjs';\nimport { Item } from '../../model/item';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent implements OnInit, OnDestroy {\n  items: Item[];\n  itemsSubscription: Subscription;\n  displayedColumns: string[] = ['sku', 'name', 'count'];\n  error: boolean = false;\n\n  constructor(private inventoryService: InventoryService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.itemsSubscription = this.inventoryService.getAllItems().subscribe(items => {\n      this.items = items;\n      this.error = false;\n    }, error => {\n      this.error = true;\n      this.triggerSnackBar('Communication error occurred!', 'Close');\n    });\n  }\n\n  triggerSnackBar(message: string, action: string): void {\n    this._snackBar.open(message, action, {\n      duration: 10000,\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.itemsSubscription) {\n      this.itemsSubscription.unsubscribe();\n    }\n  }\n\n\n}\n","<div *ngIf=\"error\" class=\"container\">\n  <h1>Please make sure server is up and running...</h1>\n</div>\n<div *ngIf=\"!error\" class=\"container\">\n  <h1>Inventory Items</h1>\n<table mat-table [dataSource]=\"items\" class=\"mat-elevation-z8\">\n\n  <ng-container *ngFor=\"let col of displayedColumns\" matColumnDef=\"{{col}}\">\n    <th mat-header-cell *matHeaderCellDef class=\"column\">{{ col | uppercase}}</th>\n    <td mat-cell *matCellDef=\"let item\" class=\"column\"> {{item[col]}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n  private readonly inventoryURL = environment.endpoint + 'inventory/all';\n  constructor(private http: HttpClient) { }\n\n  getAllItems(): Observable<any>{\n    return this.http.get(this.inventoryURL);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  endpoint: 'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}